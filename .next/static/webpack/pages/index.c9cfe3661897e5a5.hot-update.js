"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/pages/api/weatherAPI.js":
/*!*************************************!*\
  !*** ./src/pages/api/weatherAPI.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchSunsetSunrise: function() { return /* binding */ fetchSunsetSunrise; },\n/* harmony export */   fetchWeatherData: function() { return /* binding */ fetchWeatherData; },\n/* harmony export */   getWeatherByCoordinates: function() { return /* binding */ getWeatherByCoordinates; },\n/* harmony export */   getWeatherById: function() { return /* binding */ getWeatherById; },\n/* harmony export */   getWeatherByName: function() { return /* binding */ getWeatherByName; },\n/* harmony export */   getWeatherIcon: function() { return /* binding */ getWeatherIcon; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n(__webpack_require__(/*! dotenv */ \"./node_modules/dotenv/lib/main.js\").config)();\nconst API_KEY = process.env.MY_API_KEY;\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\nconsole.log(\"'API_KEY:',\".concat(API_KEY));\nasync function fetchWeatherData(searchValue, searchType) {\n    let language = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"en\";\n    try {\n        let weatherData = null;\n        if (searchType === \"id\") {\n            weatherData = await getWeatherById(searchValue, language);\n        } else if (searchType === \"name\") {\n            weatherData = await getWeatherByName(searchValue, language);\n        }\n        return weatherData;\n    } catch (error) {\n        throw error;\n    }\n}\nasync function fetchSunsetSunrise(searchValue, searchType) {\n    let language = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"en\";\n    try {\n        let weatherData = null;\n        if (searchType === \"name\") {\n            weatherData = await getWeatherByName(searchValue, language);\n        }\n        return weatherData;\n    } catch (error) {\n        throw error;\n    }\n}\nasync function getWeatherByCoordinates(latitude, longitude, language) {\n    try {\n        const url = \"\".concat(BASE_URL, \"/weather?lat=\").concat(latitude, \"&lon=\").concat(longitude, \"&appid=\").concat(API_KEY, \"&units=metric&lang=\").concat(language);\n        const res = await fetch(url);\n        if (!res.ok) {\n            throw new Error(\"Failed to fetch current weather\");\n        }\n        return await res.json();\n    } catch (error) {\n        throw error;\n    }\n}\nasync function getWeatherById(cityId, language) {\n    try {\n        const url = \"\".concat(BASE_URL, \"/weather?id=\").concat(cityId, \"&appid=\").concat(API_KEY, \"&units=metric&lang=\").concat(language);\n        const res = await fetch(url);\n        if (!res.ok) {\n            throw new Error(\"Please enter a valid city ID\");\n        }\n        return await res.json();\n    } catch (error) {\n        console.error(\"Error in getWeatherById:\", error);\n        throw error;\n    }\n}\nasync function getWeatherByName(name, language) {\n    try {\n        const cities = name.split(\",\").map((city)=>city.trim()).join(\",\");\n        const url = \"\".concat(BASE_URL, \"/find?q=\").concat(cities, \"&appid=\").concat(API_KEY, \"&units=metric&cnt=50&lang=\").concat(language);\n        const res = await fetch(url);\n        if (!res.ok) {\n            throw new Error(\"Please enter a valid City Name\");\n        }\n        return await res.json();\n    } catch (error) {\n        console.error(\"Error in getWeatherByName:\", error);\n        throw error;\n    }\n}\nfunction getWeatherIcon(weatherInfo) {\n    return \"http://openweathermap.org/img/wn/\".concat(weatherInfo.weather[0].icon, \"@4x.png\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cGFjazovL19OX0UvLi9zcmMvcGFnZXMvYXBpL3dlYXRoZXJBUEkuanM/ZGY1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcblxuY29uc3QgQVBJX0tFWSA9IHByb2Nlc3MuZW52Lk1ZX0FQSV9LRVk7XG5jb25zdCBCQVNFX1VSTCA9ICdodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUnO1xuXG5jb25zb2xlLmxvZyhgJ0FQSV9LRVk6Jywke0FQSV9LRVl9YCk7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFdlYXRoZXJEYXRhKHNlYXJjaFZhbHVlLCBzZWFyY2hUeXBlLCBsYW5ndWFnZSA9ICdlbicpIHtcbiAgdHJ5IHtcbiAgICBsZXQgd2VhdGhlckRhdGEgPSBudWxsO1xuICAgIGlmIChzZWFyY2hUeXBlID09PSAnaWQnKSB7XG4gICAgICB3ZWF0aGVyRGF0YSA9IGF3YWl0IGdldFdlYXRoZXJCeUlkKHNlYXJjaFZhbHVlLCBsYW5ndWFnZSk7XG4gICAgfSBlbHNlIGlmIChzZWFyY2hUeXBlID09PSAnbmFtZScpIHtcbiAgICAgIHdlYXRoZXJEYXRhID0gYXdhaXQgZ2V0V2VhdGhlckJ5TmFtZShzZWFyY2hWYWx1ZSwgbGFuZ3VhZ2UpO1xuICAgIH1cbiAgICByZXR1cm4gd2VhdGhlckRhdGE7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hTdW5zZXRTdW5yaXNlKHNlYXJjaFZhbHVlLCBzZWFyY2hUeXBlLCBsYW5ndWFnZSA9ICdlbicpIHtcbiAgdHJ5IHtcbiAgICBsZXQgd2VhdGhlckRhdGEgPSBudWxsO1xuICBpZiAoc2VhcmNoVHlwZSA9PT0gJ25hbWUnKSB7XG4gICAgICB3ZWF0aGVyRGF0YSA9IGF3YWl0IGdldFdlYXRoZXJCeU5hbWUoc2VhcmNoVmFsdWUsIGxhbmd1YWdlKTtcbiAgICB9XG4gICAgcmV0dXJuIHdlYXRoZXJEYXRhO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRXZWF0aGVyQnlDb29yZGluYXRlcyhsYXRpdHVkZSwgbG9uZ2l0dWRlLCBsYW5ndWFnZSkge1xuICB0cnkge1xuICAgIGNvbnN0IHVybCA9IGAke0JBU0VfVVJMfS93ZWF0aGVyP2xhdD0ke2xhdGl0dWRlfSZsb249JHtsb25naXR1ZGV9JmFwcGlkPSR7QVBJX0tFWX0mdW5pdHM9bWV0cmljJmxhbmc9JHtsYW5ndWFnZX1gO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCk7XG4gICAgaWYgKCFyZXMub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIGN1cnJlbnQgd2VhdGhlcicpO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgcmVzLmpzb24oKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0V2VhdGhlckJ5SWQoY2l0eUlkLCBsYW5ndWFnZSkge1xuICB0cnkge1xuICAgIGNvbnN0IHVybCA9IGAke0JBU0VfVVJMfS93ZWF0aGVyP2lkPSR7Y2l0eUlkfSZhcHBpZD0ke0FQSV9LRVl9JnVuaXRzPW1ldHJpYyZsYW5nPSR7bGFuZ3VhZ2V9YDtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCh1cmwpO1xuICAgIGlmICghcmVzLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BsZWFzZSBlbnRlciBhIHZhbGlkIGNpdHkgSUQnKTtcbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0IHJlcy5qc29uKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gZ2V0V2VhdGhlckJ5SWQ6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRXZWF0aGVyQnlOYW1lKG5hbWUsIGxhbmd1YWdlKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgY2l0aWVzID0gbmFtZS5zcGxpdCgnLCcpLm1hcChjaXR5ID0+IGNpdHkudHJpbSgpKS5qb2luKCcsJyk7XG4gICAgY29uc3QgdXJsID0gYCR7QkFTRV9VUkx9L2ZpbmQ/cT0ke2NpdGllc30mYXBwaWQ9JHtBUElfS0VZfSZ1bml0cz1tZXRyaWMmY250PTUwJmxhbmc9JHtsYW5ndWFnZX1gO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCk7XG4gICAgaWYgKCFyZXMub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIGVudGVyIGEgdmFsaWQgQ2l0eSBOYW1lJyk7XG4gICAgfVxuICAgIHJldHVybiBhd2FpdCByZXMuanNvbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIGdldFdlYXRoZXJCeU5hbWU6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRXZWF0aGVySWNvbih3ZWF0aGVySW5mbykge1xuICByZXR1cm4gYGh0dHA6Ly9vcGVud2VhdGhlcm1hcC5vcmcvaW1nL3duLyR7d2VhdGhlckluZm8ud2VhdGhlclswXS5pY29ufUA0eC5wbmdgO1xufVxuIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJBUElfS0VZIiwicHJvY2VzcyIsImVudiIsIk1ZX0FQSV9LRVkiLCJCQVNFX1VSTCIsImNvbnNvbGUiLCJsb2ciLCJmZXRjaFdlYXRoZXJEYXRhIiwic2VhcmNoVmFsdWUiLCJzZWFyY2hUeXBlIiwibGFuZ3VhZ2UiLCJ3ZWF0aGVyRGF0YSIsImdldFdlYXRoZXJCeUlkIiwiZ2V0V2VhdGhlckJ5TmFtZSIsImVycm9yIiwiZmV0Y2hTdW5zZXRTdW5yaXNlIiwiZ2V0V2VhdGhlckJ5Q29vcmRpbmF0ZXMiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsInVybCIsInJlcyIsImZldGNoIiwib2siLCJFcnJvciIsImpzb24iLCJjaXR5SWQiLCJuYW1lIiwiY2l0aWVzIiwic3BsaXQiLCJtYXAiLCJjaXR5IiwidHJpbSIsImpvaW4iLCJnZXRXZWF0aGVySWNvbiIsIndlYXRoZXJJbmZvIiwid2VhdGhlciIsImljb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/pages/api/weatherAPI.js\n"));

/***/ })

});