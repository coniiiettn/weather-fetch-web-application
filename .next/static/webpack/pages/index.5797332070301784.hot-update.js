"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/pages/api/weatherAPI.js":
/*!*************************************!*\
  !*** ./src/pages/api/weatherAPI.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchSunsetSunrise: function() { return /* binding */ fetchSunsetSunrise; },\n/* harmony export */   fetchWeatherData: function() { return /* binding */ fetchWeatherData; },\n/* harmony export */   getWeatherByCoordinates: function() { return /* binding */ getWeatherByCoordinates; },\n/* harmony export */   getWeatherById: function() { return /* binding */ getWeatherById; },\n/* harmony export */   getWeatherByName: function() { return /* binding */ getWeatherByName; },\n/* harmony export */   getWeatherIcon: function() { return /* binding */ getWeatherIcon; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n(__webpack_require__(/*! dotenv */ \"./node_modules/dotenv/lib/main.js\").config)();\nconst API_KEY = process.env.MY_API_KEY;\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\nconsole.log(\"'API_KEY:',\".concat(process.env.MY_API_KEY));\nasync function fetchWeatherData(searchValue, searchType) {\n    let language = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"en\";\n    try {\n        let weatherData = null;\n        if (searchType === \"id\") {\n            weatherData = await getWeatherById(searchValue, language);\n        } else if (searchType === \"name\") {\n            weatherData = await getWeatherByName(searchValue, language);\n        }\n        return weatherData;\n    } catch (error) {\n        throw error;\n    }\n}\nasync function fetchSunsetSunrise(searchValue, searchType) {\n    let language = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"en\";\n    try {\n        let weatherData = null;\n        if (searchType === \"name\") {\n            weatherData = await getWeatherByName(searchValue, language);\n        }\n        return weatherData;\n    } catch (error) {\n        throw error;\n    }\n}\nasync function getWeatherByCoordinates(latitude, longitude, language) {\n    try {\n        const url = \"\".concat(BASE_URL, \"/weather?lat=\").concat(latitude, \"&lon=\").concat(longitude, \"&appid=\").concat(API_KEY, \"&units=metric&lang=\").concat(language);\n        const res = await fetch(url);\n        if (!res.ok) {\n            throw new Error(\"Failed to fetch current weather\");\n        }\n        return await res.json();\n    } catch (error) {\n        throw error;\n    }\n}\nasync function getWeatherById(cityId, language) {\n    try {\n        const url = \"\".concat(BASE_URL, \"/weather?id=\").concat(cityId, \"&appid=\").concat(API_KEY, \"&units=metric&lang=\").concat(language);\n        const res = await fetch(url);\n        if (!res.ok) {\n            throw new Error(\"Please enter a valid city ID\");\n        }\n        return await res.json();\n    } catch (error) {\n        console.error(\"Error in getWeatherById:\", error);\n        throw error;\n    }\n}\nasync function getWeatherByName(name, language) {\n    try {\n        const cities = name.split(\",\").map((city)=>city.trim()).join(\",\");\n        const url = \"\".concat(BASE_URL, \"/find?q=\").concat(cities, \"&appid=\").concat(API_KEY, \"&units=metric&cnt=50&lang=\").concat(language);\n        const res = await fetch(url);\n        if (!res.ok) {\n            throw new Error(\"Please enter a valid City Name\");\n        }\n        return await res.json();\n    } catch (error) {\n        console.error(\"Error in getWeatherByName:\", error);\n        throw error;\n    }\n}\nfunction getWeatherIcon(weatherInfo) {\n    return \"http://openweathermap.org/img/wn/\".concat(weatherInfo.weather[0].icon, \"@4x.png\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SSxFQUFDO0FBQ3pFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9wYWdlcy9hcGkvd2VhdGhlckFQSS5qcz9kZjUyIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xuXG5jb25zdCBBUElfS0VZID0gcHJvY2Vzcy5lbnYuTVlfQVBJX0tFWTtcbmNvbnN0IEJBU0VfVVJMID0gJ2h0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNSc7XG5cbmNvbnNvbGUubG9nKGAnQVBJX0tFWTonLCR7cHJvY2Vzcy5lbnYuTVlfQVBJX0tFWX1gKTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoV2VhdGhlckRhdGEoc2VhcmNoVmFsdWUsIHNlYXJjaFR5cGUsIGxhbmd1YWdlID0gJ2VuJykge1xuICB0cnkge1xuICAgIGxldCB3ZWF0aGVyRGF0YSA9IG51bGw7XG4gICAgaWYgKHNlYXJjaFR5cGUgPT09ICdpZCcpIHtcbiAgICAgIHdlYXRoZXJEYXRhID0gYXdhaXQgZ2V0V2VhdGhlckJ5SWQoc2VhcmNoVmFsdWUsIGxhbmd1YWdlKTtcbiAgICB9IGVsc2UgaWYgKHNlYXJjaFR5cGUgPT09ICduYW1lJykge1xuICAgICAgd2VhdGhlckRhdGEgPSBhd2FpdCBnZXRXZWF0aGVyQnlOYW1lKHNlYXJjaFZhbHVlLCBsYW5ndWFnZSk7XG4gICAgfVxuICAgIHJldHVybiB3ZWF0aGVyRGF0YTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFN1bnNldFN1bnJpc2Uoc2VhcmNoVmFsdWUsIHNlYXJjaFR5cGUsIGxhbmd1YWdlID0gJ2VuJykge1xuICB0cnkge1xuICAgIGxldCB3ZWF0aGVyRGF0YSA9IG51bGw7XG4gIGlmIChzZWFyY2hUeXBlID09PSAnbmFtZScpIHtcbiAgICAgIHdlYXRoZXJEYXRhID0gYXdhaXQgZ2V0V2VhdGhlckJ5TmFtZShzZWFyY2hWYWx1ZSwgbGFuZ3VhZ2UpO1xuICAgIH1cbiAgICByZXR1cm4gd2VhdGhlckRhdGE7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFdlYXRoZXJCeUNvb3JkaW5hdGVzKGxhdGl0dWRlLCBsb25naXR1ZGUsIGxhbmd1YWdlKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgdXJsID0gYCR7QkFTRV9VUkx9L3dlYXRoZXI/bGF0PSR7bGF0aXR1ZGV9Jmxvbj0ke2xvbmdpdHVkZX0mYXBwaWQ9JHtBUElfS0VZfSZ1bml0cz1tZXRyaWMmbGFuZz0ke2xhbmd1YWdlfWA7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsKTtcbiAgICBpZiAoIXJlcy5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggY3VycmVudCB3ZWF0aGVyJyk7XG4gICAgfVxuICAgIHJldHVybiBhd2FpdCByZXMuanNvbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRXZWF0aGVyQnlJZChjaXR5SWQsIGxhbmd1YWdlKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgdXJsID0gYCR7QkFTRV9VUkx9L3dlYXRoZXI/aWQ9JHtjaXR5SWR9JmFwcGlkPSR7QVBJX0tFWX0mdW5pdHM9bWV0cmljJmxhbmc9JHtsYW5ndWFnZX1gO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCk7XG4gICAgaWYgKCFyZXMub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIGVudGVyIGEgdmFsaWQgY2l0eSBJRCcpO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgcmVzLmpzb24oKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBnZXRXZWF0aGVyQnlJZDonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFdlYXRoZXJCeU5hbWUobmFtZSwgbGFuZ3VhZ2UpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBjaXRpZXMgPSBuYW1lLnNwbGl0KCcsJykubWFwKGNpdHkgPT4gY2l0eS50cmltKCkpLmpvaW4oJywnKTtcbiAgICBjb25zdCB1cmwgPSBgJHtCQVNFX1VSTH0vZmluZD9xPSR7Y2l0aWVzfSZhcHBpZD0ke0FQSV9LRVl9JnVuaXRzPW1ldHJpYyZjbnQ9NTAmbGFuZz0ke2xhbmd1YWdlfWA7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsKTtcbiAgICBpZiAoIXJlcy5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgZW50ZXIgYSB2YWxpZCBDaXR5IE5hbWUnKTtcbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0IHJlcy5qc29uKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gZ2V0V2VhdGhlckJ5TmFtZTonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFdlYXRoZXJJY29uKHdlYXRoZXJJbmZvKSB7XG4gIHJldHVybiBgaHR0cDovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHt3ZWF0aGVySW5mby53ZWF0aGVyWzBdLmljb259QDR4LnBuZ2A7XG59XG4iXSwibmFtZXMiOlsicmVxdWlyZSIsImNvbmZpZyIsIkFQSV9LRVkiLCJwcm9jZXNzIiwiZW52IiwiTVlfQVBJX0tFWSIsIkJBU0VfVVJMIiwiY29uc29sZSIsImxvZyIsImZldGNoV2VhdGhlckRhdGEiLCJzZWFyY2hWYWx1ZSIsInNlYXJjaFR5cGUiLCJsYW5ndWFnZSIsIndlYXRoZXJEYXRhIiwiZ2V0V2VhdGhlckJ5SWQiLCJnZXRXZWF0aGVyQnlOYW1lIiwiZXJyb3IiLCJmZXRjaFN1bnNldFN1bnJpc2UiLCJnZXRXZWF0aGVyQnlDb29yZGluYXRlcyIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwidXJsIiwicmVzIiwiZmV0Y2giLCJvayIsIkVycm9yIiwianNvbiIsImNpdHlJZCIsIm5hbWUiLCJjaXRpZXMiLCJzcGxpdCIsIm1hcCIsImNpdHkiLCJ0cmltIiwiam9pbiIsImdldFdlYXRoZXJJY29uIiwid2VhdGhlckluZm8iLCJ3ZWF0aGVyIiwiaWNvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/api/weatherAPI.js\n"));

/***/ })

});